---
import { getCollection } from "astro:content";
import Shell from "../../layouts/Shell.astro";
import Footer from "../../components/Footer.astro";
import { productFromUrl } from "../../lib/products";
import ProductNav from "../../components/nav/product/Nav.astro";
import Accordion from "../../components/Accordion.astro"
import AccordionItem from "../../components/AccordionItem.astro"
import Card from "../../components/ShowcaseCard.astro"

const product = productFromUrl(Astro.url);
---
<Shell
	title={`showcase`}
	description="Leaning Technologies Showcase"
>
	{product && <ProductNav {product} />}
	<header class="text-center text-stone-100 py-16">
		<h1 class="text-5xl font-semibold text-balance">
			Showcase
		</h1>
		<p class="text-lg text-balance my-8 text-stone-400">
			Including demos, other products and case studies.
		</p>


		<div class="container">
			<div class="left-column">
				<Accordion>
					<AccordionItem header="Demos" onclick="toggleDemoContent()">
					  <ul>
						<button onclick="showContent('demo', 'Cheerp'); event.stopPropagation();">Cheerp</button>
						<button onclick="showContent('product', 'CheerpJ'); event.stopPropagation();">CheerpJ</button>
						<button onclick="showContent('studyCase', 'CheerpX'); event.stopPropagation();">CheerpX</button>
					  </ul>
					</AccordionItem>
				  </Accordion>
			</div>

			<div class="right-column">
				<div id="initialText" class="patterns">
					<svg width="100%" height="100%">
					  <defs>
						<pattern id="polka-dots" x="0" y="0" width="100" height="100" patternUnits="userSpaceOnUse">
						  <circle fill="#be9ddf" cx="25" cy="25" r="3"></circle>
						</pattern>  
					  </defs>
				   <text x="50%" y="60%"  text-anchor="middle"  >
					 Please choose one on the left
				   </text>
				   </svg>
				</div>

			  <div id="demoContent" style="display: none;">
				<Card
				  url="#"
				  img='https://images.unsplash.com/photo-1647118762210-393b52e96fbc?q=80&w=2667&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'
				  title="My Awesome Post"
				  footer="Test"
				>
				  Lorem ipsum dolor sit amet.
				</Card>
			  </div>

			  <div id="productContent" style="display: none;">
				<Card
				  url="#"
				  img='https://images.pexels.com/photos/2531709/pexels-photo-2531709.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'
				  title="My Awesome Post"
				  footer="Test"
				>
				  Lorem ipsum dolor sit amet.
				</Card>
			  </div>
			
			  <div id="studycaseContent" style="display: none;">
				<Card
				  url="#"
				  img='https://images.pexels.com/photos/66997/pexels-photo-66997.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'
				  title="My Awesome Post"
				  footer="Test"
				>
				  Lorem ipsum dolor sit amet.
				</Card>
			  </div>

			</div>
		  </div>



		<div
			class="bg-gradient-to-b from-primary-600 to-transparent opacity-20 w-full h-[40rem] absolute inset-0 -z-10"
		>
			<!-- cool background -->
		</div>
	</header>

	<Footer />
</Shell>

<script type="text/javascript">
	function showContent(contentType, contentName) {
	  const initialText = document.getElementById('initialText');
	  const contentIds = {
		demo: 'demoContent',
		product: 'productContent',
		studyCase: 'studycaseContent'
	  };
  
	  const contentDiv = document.getElementById(contentIds[contentType]);
  
	  if (contentDiv && contentDiv.style.display === 'block') {
		contentDiv.style.display = 'none';
		initialText.style.display = 'block';
		return; 
	  }
  
	  if (initialText) {
		initialText.style.display = 'none';
	  }
  
	  Object.values(contentIds).forEach(id => {
		const element = document.getElementById(id);
		if (element) {
		  element.style.display = 'none';
		}
	  });
  
	  if (contentDiv) {
		contentDiv.style.display = 'block';
		contentDiv.dataset.demo = contentName; 
	  }
	}
  </script>
  
  

  
  
  
<style>
  .container {
    display: flex;
    width: 100%;
	max-width: 1200px;  
    margin: 0 auto;
    padding: 0 20px;
  }
  .left-column {
    width: 20%;
	
  }
  .right-column {
    width: 80%;
	margin-left: 2rem;
  }

  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;
  }
  body .card {
    color: purple;
    a {
      color: gold;
    }
  }
  .patterns {
  display: block;
  height: 10vh;
}



svg text {
  letter-spacing: 10px;
  stroke: #8ccce7;
  font-size: 2rem;
  font-weight: 400;
  stroke-width: 1;
  animation: textAnimate 4s infinite alternate;
  
}

@keyframes textAnimate {
  0% {
    stroke-dasharray: 0 50%;
    stroke-dashoffset:  20%;
    fill:hsl(327, 66%, 35%)

  }
  
  100% {
    stroke-dasharray: 50% 0;
    stroke-dashoffstet: -20%;
    fill: hsla(189, 69%, 75%, 0.414)
  }
  
}


</style>
