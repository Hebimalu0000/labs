---
import Shell from "./Shell.astro";
import DocsSidebar from "../components/DocsSidebar.astro";
import { getCollectionGroupsByMode } from "../lib/nav";
import Breadcrumbs from "../components/Breadcrumbs.astro";
import { Icon } from "astro-icon";

interface Props {
	title: string;
}

const { title } = Astro.props;

const product = "cheerp"; // TODO: first component of pathname
const mode = "guides"; // TODO: second component of pathname
const groups = await getCollectionGroupsByMode(product, mode);
---

<Shell {title}>
	<docs-article class="max-w-screen-2xl w-full mx-auto flex">
		<div data-sidebar-wrapper class="hidden lg:block shadow-xl lg:shadow-none">
			<DocsSidebar {mode} {groups} />
		</div>
		<div
			data-backdrop
			class="hidden lg:hidden fixed inset-0 bg-stone-900 bg-opacity-50 backdrop-blur"
		>
		</div>
		<main
			class="grow p-4 sm:px-6 md:px-8 w-full max-w-3xl mx-auto lg:mx-0"
			data-pagefind-body
		>
			<div class="mb-2 flex items-center gap-4">
				<button data-sidebar-toggle class="lg:hidden">
					<span class="sr-only">Open navigation menu</span>
					<Icon name="jam:menu" class="w-8 h-8" />
				</button>
				<Breadcrumbs />
			</div>

			<div class="prose prose-stone dark:prose-invert">
				<h1>{title}</h1>
				<slot />
			</div>
		</main>
		<aside class="w-32 xl:w-64 p-4 space-y-8 text-sm hidden lg:block">
			<section>
				<h5 class="font-semibold mb-2">On this page</h5>
				<ul>
					<li>Table</li>
					<li>of</li>
					<li>contents</li>
				</ul>
			</section>
			<section>
				<h5 class="font-semibold mb-2">Contribute</h5>
				<ul>
					<li>Edit this page</li>
					<li>Give feedback</li>
				</ul>
			</section>
		</aside>
	</docs-article>
</Shell>

<script>
	class DocsArticle extends HTMLElement {
		constructor() {
			super();
			const button = this.querySelector("[data-sidebar-toggle]");
			const backdrop = this.querySelector("[data-backdrop]");
			const close = this.querySelector("[data-sidebar-close]");
			button!.addEventListener("click", this.toggleSidebar.bind(this));
			backdrop!.addEventListener("click", this.toggleSidebar.bind(this));
			close!.addEventListener("click", this.toggleSidebar.bind(this));
		}

		toggleSidebar() {
			const sidebar = this.querySelector("[data-sidebar-wrapper]");
			const backdrop = this.querySelector("[data-backdrop]");
			sidebar!.classList.toggle("hidden");
			backdrop!.classList.toggle("hidden");
			sidebar!.querySelector("a")?.focus();
		}
	}

	customElements.define("docs-article", DocsArticle);
</script>
