---
import Shell from "./Shell.astro";
import DocsSidebar from "../components/DocsSidebar.astro";
import { getRootNav, findNavDirectory } from "../lib/nav";
import { productFromUrl } from "../lib/products";
import Breadcrumbs from "../components/Breadcrumbs.astro";
import { Icon } from "astro-icon";
import TableOfContents from "../components/TableOfContents.astro";
import type { Heading } from "../components/TableOfContentsHeading.astro";
import DocsPagination from "../components/DocsPagination.astro";

interface Props {
	id: string;
	title: string;
	subtitle: string | undefined;
	headings: Heading[] | undefined;
}

const { id, title, subtitle, headings } = Astro.props;

const nav = await getRootNav();
const product = productFromUrl(Astro.url);

const directory = product && findNavDirectory(nav, [product.id]);

const today = new Date();

const contributeLinks = [
	{
		label: "Edit this page",
		href: `https://github.com/leaningtech/labs.leaningtech.com/edit/main/src/content/docs/${id}`,
	},
	{
		label: "Give feedback",
		href: "https://github.com/leaningtech/labs.leaningtech.com/issues/new",
	},
];
---

<Shell title={[title, subtitle].filter(Boolean).join(" | ")}>
	<docs-article class="max-w-screen-2xl w-full mx-auto flex">
		<div data-sidebar-wrapper class="hidden lg:block shadow-xl lg:shadow-none">
			<DocsSidebar {directory} />
		</div>
		<div
			data-backdrop
			class="hidden lg:hidden fixed inset-0 bg-stone-900 bg-opacity-50 backdrop-blur"
		>
		</div>
		<main class="grow p-6 sm:px-6 md:px-8 w-full max-w-3xl mx-auto lg:mx-0">
			<div class="mb-2.5 flex items-center gap-4">
				<button data-sidebar-toggle class="lg:hidden">
					<span class="sr-only">Open navigation menu</span>
					<Icon name="jam:menu" class="w-8 h-8" />
				</button>
				<Breadcrumbs current={id} />
			</div>

			<main
				data-pagefind-body
				class="prose prose-stone dark:prose-invert pb-10"
			>
				<h1 class="mb-2 font-bold">{title}</h1>
				{subtitle && <p class="mt-0 mb-8 text-stone-500 text-xl">{subtitle}</p>}
				<slot />
			</main>

			{
				directory && (
					<div class="py-5">
						<DocsPagination activeId={id} />
					</div>
				)
			}
			<footer class="py-10 border-t border-t-stone-800 text-stone-500 text-sm">
				Â© Leaning Technologies {today.getFullYear()}
			</footer>
		</main>
		<aside class="w-32 xl:w-64 px-4 py-6 text-sm hidden lg:block">
			<div class="space-y-10 sticky top-24">
				{headings && <TableOfContents {headings} />}
				<section>
					<h5 class="font-semibold mb-1 leading-7 text-stone-300">
						Contribute
					</h5>
					<ul>
						{
							contributeLinks.map(({ label, href }) => (
								<li>
									<a
										{href}
										class="block py-1 text-stone-400 hover:text-stone-200"
									>
										{label}
									</a>
								</li>
							))
						}
					</ul>
				</section>
			</div>
		</aside>
	</docs-article>
</Shell>

<script>
	class DocsArticle extends HTMLElement {
		constructor() {
			super();
			const button = this.querySelector("[data-sidebar-toggle]");
			const backdrop = this.querySelector("[data-backdrop]");
			const close = this.querySelector("[data-sidebar-close]");
			button!.addEventListener("click", this.toggleSidebar.bind(this));
			backdrop!.addEventListener("click", this.toggleSidebar.bind(this));
			close!.addEventListener("click", this.toggleSidebar.bind(this));
		}

		toggleSidebar() {
			const sidebar = this.querySelector("[data-sidebar-wrapper]");
			const backdrop = this.querySelector("[data-backdrop]");
			sidebar!.classList.toggle("hidden");
			backdrop!.classList.toggle("hidden");
			sidebar!.querySelector("a")?.focus();
		}
	}

	customElements.define("docs-article", DocsArticle);
</script>
