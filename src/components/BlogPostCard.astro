---
import { getEntry, type CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";
import { resolveAuthors } from "../lib/blog";

interface Props {
	post: CollectionEntry<"blog"> | CollectionEntry<"blog">["slug"];
	showMetadata?: boolean;
}

const { post: postOrSlug, showMetadata = false } = Astro.props;
const post = typeof postOrSlug === "string" ? await getEntry("blog", postOrSlug) : postOrSlug;
const authors = await resolveAuthors(post.data.authors);
---

<a
	href={`/blog/${post.slug}`}
	class="inline-flex flex-col space-between group overflow-hidden"
>
	<img src={post.data.heroImage} class="rounded-xl mb-6 aspect-video bg-stone-100" />
	<h3 class="text-2xl font-bold leading-7 text-balance text-white group-hover:text-primary-400">{post.data.title}</h3>
	{showMetadata && <div
		class="mt-4 flex justify-between items-center gap-8 text-stone-400 text-lg whitespace-nowrap"
	>
		<div class="flex items-center gap-2 font-semibold overflow-hidden">
			<div class="flex-none space-x-[-1rem]">
				{
					authors.map((author) => (
						<img
							class="inline-block w-8 h-8 rounded-full shadow border-2 border-stone-900"
							src={author.avatar}
							alt=""
							loading="lazy"
							decoding="async"
						/>
					))
				}
			</div>
			<span class="overflow-hidden text-ellipsis">
				{authors.map((author) => author.name).join(", ")}
			</span>
		</div>
		<FormattedDate date={post.data.pubDate} />
	</div>}
</a>
